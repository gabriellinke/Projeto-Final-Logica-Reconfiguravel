/******************************************************************************
* Copyright (c) 2006 Altera Corporation, San Jose, California, USA.           *
* All rights reserved. All use of this software and documentation is          *
* subject to the License Agreement located at the end of this file below.     *
*******************************************************************************                                                                             *
* Date - October 24, 2006                                                     *
* Module - iniche_init.c                                                      *
*                                                                             *                                                                             *
******************************************************************************/

/******************************************************************************
 * NicheStack TCP/IP stack initialization and Operating System Start in main()
 * for Simple Socket Server (SSS) example. 
 * 
 * This example demonstrates the use of MicroC/OS-II running on NIOS II.       
 * In addition it is to serve as a good starting point for designs using       
 * MicroC/OS-II and Altera NicheStack TCP/IP Stack - NIOS II Edition.                                                                                           
 *      
 * Please refer to the Altera NicheStack Tutorial documentation for details on 
 * this software example, as well as details on how to configure the NicheStack
 * TCP/IP networking stack and MicroC/OS-II Real-Time Operating System.  
 */
  
#include <stdio.h>
#include <stdint.h>
#include <conio.h>
#include <string.h>
#include <stdlib.h>
#include <ctype.h>
#include <io.h>
#include <fcntl.h>
/* MicroC/OS-II definitions */
#include "../fir_bsp/HAL/inc/includes.h"

#include "../fir_bsp/system.h"

#include "dm9000a.h"

/* Simple Socket Server definitions */
#include "simple_socket_server.h"
#include "alt_error_handler.h"

/* Nichestack definitions */
#include "../fir_bsp/iniche/src/h/nios2/ipport.h"
#include "../fir_bsp/iniche/src/h/tcpport.h"
#include "../fir_bsp/iniche/src/h/libport.h"
#include "../fir_bsp/iniche/src/nios2/osport.h"
#include "basic_io.h"
#include "LCD.h"
#include "altera_avalon_pio_regs.h"
/* Definition of task stack for the initial task which will initialize the NicheStack
 * TCP/IP Stack and then initialize the rest of the Simple Socket Server example tasks. 
 */
OS_STK    SSSInitialTaskStk[TASK_STACKSIZE];

/* Declarations for creating a task with TK_NEWTASK.  
 * All tasks which use NicheStack (those that use sockets) must be created this way.
 * TK_OBJECT macro creates the static task object used by NicheStack during operation.
 * TK_ENTRY macro corresponds to the entry point, or defined function name, of the task.
 * inet_taskinfo is the structure used by TK_NEWTASK to create the task.
 */
TK_OBJECT(to_ssstask);
TK_ENTRY(SSSSimpleSocketServerTask);
void disp_7seg(int _duty_cycle, int _prescaler, int _timer, int _enable);
int binaryTodecimal (char num[]);
char *decimal_to_binary(int n);
int str_length( char str[]);

struct inet_taskinfo ssstask = {
      &to_ssstask,
      "simple socket server",
      SSSSimpleSocketServerTask,
      4,
      APP_STACK_SIZE,
};

/* SSSInitialTask will initialize the NicheStack
 * TCP/IP Stack and then initialize the rest of the Simple Socket Server example 
 * RTOS structures and tasks. 
 */
void SSSInitialTask(void *task_data)
{
  INT8U error_code;

  /*
   * Initialize Altera NicheStack TCP/IP Stack - Nios II Edition specific code.
   * NicheStack is initialized from a task, so that RTOS will have started, and
   * I/O drivers are available.  Two tasks are created:
   *    "Inet main"  task with priority 2
   *    "clock tick" task with priority 3
   */
  LCD_Line1();
  LCD_Show_Text("Adquirindo IP");
  LCD_Line2();
  LCD_Show_Text("via DHCP -- PWM");

//  alt_iniche_init();
//  netmain();

  /* Wait for the network stack to be ready before proceeding.
   * iniche_net_ready indicates that TCP/IP stack is ready, and IP address is obtained.
   */
//  while (!iniche_net_ready)
//    TK_SLEEP(1);

  /* Now that the stack is running, perform the application initialization steps */

  /* Application Specific Task Launching Code Block Begin */

  printf("\nSimple Socket Server starting up\n");


  LCD_Init();

  struct sockaddr_in sa;
  int res;
  int SocketFD;
  char buf[2000];
  char p1[32];
/*
  printf("Inicializacao\n");

  SocketFD = socket(PF_INET, SOCK_STREAM, IPPROTO_TCP);
  printf("Socket criado\n");

  memset(&sa, 0, sizeof sa);
  sa.sin_family = AF_INET;
  sa.sin_port = htons(5000); // ALTERAR PORTA
  res = inet_pton(AF_INET, "192.168.0.210", &sa.sin_addr); //ALTERAR O IP

  if (connect(SocketFD, (struct sockaddr *)&sa, sizeof sa) == -1) {
	perror("connect failed");
	close(SocketFD);
	exit(EXIT_FAILURE);
  }
*/
  while (1){
/*
	  if (recv(SocketFD, buf, sizeof(buf), 0) < 0)  {
	  		perror("Error - Recv()");
	  		exit(EXIT_FAILURE);
	  } else {
	  		printf("Msg recebida: %s\n", buf);
	  		memcpy(p1, buf, 32 * sizeof(char));

	  		printf("MSG BIN: %s\n", buf);
	  }
*/
	  //int16_t vetor[] = {1638, 2488, 2350, 2251, 2209, 3544, 6114, 5132, 6436, 7221, 9719, 8887, 12331, 10590, 12069, 12814, 15082, 16735, 14742, 18205, 19186, 19818, 19029, 18573, 22093, 20068, 23453, 22344, 22302, 25341, 23101, 24413, 27481, 27550, 25386, 26694, 28945, 27971, 28815, 29434, 28659, 31704, 28898, 30550, 30259, 31593, 30979, 30928, 32295, 32767, 31661, 31998, 31910, 32767, 32767, 32767, 31930, 32557, 32209, 32138, 32468, 32405, 32767, 31831, 32727, 29945, 30914, 32490, 31195, 30064, 29290, 31054, 29819, 28736, 27035, 28539, 26734, 28094, 25973, 24457, 25426, 22972, 22955, 22156, 23077, 21033, 20375, 18728, 17867, 18648, 18106, 17685, 15943, 16551, 13239, 13678, 12819, 11867, 11634, 10364, 10442, 8200, 7177, 6794, 4997, 4357, 2403, 1755, 1169, -399, -239, -69 , -774, -1856, -4934, -3504, -5923, -6421, -6380, -7011, -10114, -11083, -10623, -11998, -12939, -12355, -12875, -15730, -15078, -16013, -17086, -17134, -20240, -21300, -19502, -21805, -20965, -24135, -23626, -24716, -25955, -24694, -27329, -27226, -27102, -26356, -28333, -29391, -27701, -29588, -30192, -29653, -31456, -30898, -32641, -32751, -32627, -30377, -31067, -32658, -31089, -31411, -32676, -31739, -31980, -31354, -31190, -32767, -32767, -32767, -32767, -32480, -32767, -30499, -30968, -31919, -30810, -30074, -32016, -29357, -31454, -30771, -29792};
	    int16_t vetor[] = {1638, 10766 , 18163 , 24175 , 28253 , 31310 , 32767 , 28506 , 23905 , 16785 , 9943, -983, -7643 , -18755, -25227, -30441, -31729, -31007, -31300, -23707, -16564, -8298 , -660, 7365, 1390, 7862, 19017 , 24270 , 28616 , 32767 , 30831 , 28956 , 26448 , 18957 , 7814, -598, -8063 , -18004, -24696, -29607, -32767, -30928, -31566, -25307, -18946, -9477 , -1153 , 7797, 201 , 10165 , 16922 , 24179 , 29043 , 32767 , 32767 , 30644 , 24048 , 17712 , 8987, -196, -8970 , -17386, -23331, -29787, -31381, -32767, -30255, -23445, -17462, -9833 , -1044 , 10345 , 768 , 9339, 16574 , 25610 , 29366 , 32767 , 32375 , 28853 , 25426 , 16591 , 8770, -573, -8197 , -18044, -25076, -31099, -32767, -32486, -29733, -24427, -18410, -8573 , -1864 , 8646, -124, 8999, 18106 , 24761 , 30778 , 32081 , 31996 , 29940 , 24066 , 17349 , 7879, -1042 , -9917 , -19048, -25040, -29041, -31524, -31773, -31402, -24109, -18649, -9816 , 331 , 9836, -1127 , 8009, 17824 , 24368 , 29344 , 32767 , 32767 , 29190 , 25672 , 18548 , 9832, 1365, -10194, -18998, -23549, -30236, -31405, -32767, -30296, -25801, -19458, -9177 , -2033 , 7866, -227, 10253 , 17245 , 23708 , 30902 , 32094 , 31931 , 30271 , 23834 , 17729 , 7855, -1172 , -10010, -16021, -23589, -30103, -31089, -31381, -30023, -24073, -17308, -8247 , 1105, 7762, -136, 7766, 16961 , 24589 , 28869 , 32767 , 32767 , 29491 , 25341 , 18787 , 8088, 1205, -10479, -18681, -25202, -28816, -31986, -32767, -29600, -25167, -18811, -10978, 89  , 9897, -1082 , 8824, 16714 , 26194 , 28987 , 32085 , 30989 , 30824 , 23597 , 17946 , 9962, -1014 , -9462 , -17495, -24948, -29868, -31778, -32767, -29011, -23820, -17282, -10271, 383 , 7619, -574, 10330 , 18177 , 24348 , 30043 , 31451 , 32767 , 29721 , 25391 , 16998 , 10409 , -623, -9103 , -17333, -23582, -30500, -31705, -31508, -30402, -24468, -18938, -9419 , 933 , 8160, -1542 , 8189, 18796 , 25704 , 29959 , 31133 , 31493 , 28446 , 26377 , 18756 , 9556, 886 , -8696 , -17710, -25813, -30941, -32767, -31818, -30013, -25255, -17953, -10100, -759, 8291, 491 , 9025, 16803 , 24183 , 31396 , 32657 , 30922 , 31285 , 24103 , 18407 , 10855 , -845, -8706 , -16023, -25889, -29027, -31135, -32157, -31432, -24725, -18392, -10441, -2033 , 9649, 445 , 9841, 16157 , 24808 , 30062 , 32767 , 31156 , 31305 , 23746 , 18454 , 9929, 987 , -10540, -18937, -25793, -29587, -32046, -32767, -30061, -25242, -16800, -8348 , -325, 8218, -420, 10594 , 16487 , 23954 , 28810 , 32767 , 31156 , 31229 , 23984 , 19372 , 9569, 660 , -10262, -16830, -23673, -28176, -32767, -32767, -30280, -26414, -16644, -10454, 681 , 8610, 1147, 10738 , 18224 , 25990 , 30482 , 32604 , 32767 , 30170 , 26030 , 19304 , 10389 , -964, -7569 , -17440, -26116, -29349, -31413, -32767, -31246, -25227, -17783, -10449, 833 , 7219, 1103, 9516, 17715 , 25140 , 28708 , 32767 , 30983 , 29828 , 24107 , 17420 , 10969 , 1411, -10431, -16508, -25738, -28775, -32687, -32767, -30146, -25664, -17272, -10131, -1732 , 7346, 1311, 8154, 16514 , 24740 , 29140 , 32228 , 31474 , 29304 , 24937 , 16866 , 8410, 1108, -7681 , -18165, -24752, -29178, -31908, -31548, -29175, -26224, -17156, -8631 , 425 , 9219, -767, 9786, 17029 , 25039 , 29964 , 32767 , 31377 , 29008 , 24335 , 16635 , 8306, -1364 , -9495 , -18630, -25890, -30807, -31422, -32767, -28773, -24019, -19600, -9202 , 643 , 10345 , 8   , 7666, 17233 , 23464 , 28635 , 32004 , 32767 , 30431 , 25524 , 19108 , 8103, 1043, -7890 , -16753, -26163, -29923, -32556, -32767, -30833, -26173, -18508, -9905 , 708 , 7486, 1343, 7694, 18073 , 23199 , 30781 , 31987 , 32609 , 30006 , 23523 , 17559 , 10925 , 1576, -8972 , -17827, -23180, -29585, -32767, -31235, -28482, -25680, -19397, -9054 , 979 , 10076 , -1515 , 10587 , 18097 , 23703 , 28452 , 32571 , 31379 , 30454 , 25601 , 18374 , 10473 , 869 , -7870 , -18644, -25770, -29909, -31964, -31303, -31535, -25081, -18180, -8477 , -368, 9421, -1266 , 8478, 16800 , 25517 , 30316 , 31768 , 32767 , 30415 , 24353 , 17747 , 9676, -848, -10366, -19013, -24700, -30443, -32767, -32632, -29009, -25632, -18301, -10424, 769 , 9265, -941, 9228, 16606 , 26064 , 28600 , 32767 , 32767 , 30206 , 25251 , 18017 , 8520, -595, -10461, -17028, -22983, -30998, -32767, -32767, -28572, -23918, -18374, -9286 , -701, 8696, -236, 7646, 16805 , 23572 , 30659 , 30906 , 32767 , 30642 , 24734 , 18760 , 8721, -1291 , -9342 , -17722, -25036, -30613, -31459, -32689, -28709, -26460, -19081, -8931 , -596, 8016, -237, 9221, 16397 , 23797 , 31060 , 32228 , 31730 , 31171 , 26319 , 17468 , 9386, -177, -9770 , -16549, -23841, -29303, -30762, -32767, -31080, -23727, -19121, -9366 , -786, 8278, 1399, 9766, 16186 , 24530 , 29296 , 32654 , 30931 , 31119 , 23962 , 16758 , 8994, 193 , -9702 , -16333, -22977, -29270, -31926, -32767, -28831, -25016, -19621, -10565, -83 , 7507, -1357 , 7619, 17853 , 23906 , 30768 , 31693 , 32767 , 29923 , 25372 , 17621 , 8802, -120, -9081 , -18010, -24629, -29993, -31540, -32691, -31551, -25605, -19038, -11209, -410, 8588, -1144 , 9683, 17644 , 24597 , 30385 , 31320 , 32767 , 30333 , 25408 , 17223 , 8342, -530, -9765 , -18954, -23083, -29194, -32767, -32767, -30310, -24156, -16830, -8683 , 245 , 7486, -950, 9581, 16232 , 24878 , 28154 , 32132 , 31890 , 31049 , 23406 , 18310 , 8238, -915, -8531 , -16042, -23163, -31050, -31492, -30937, -28502, -23490, -16680, -9501 , -510, 8520, 1346, 8811, 17540 , 23929 , 31263 , 32148 , 32767 , 28804 , 25249 , 17649 , 9806, -522, -8287 , -15894, -25243, -28490, -30956, -30918, -31582, -25480, -18944, -8173 , 877 , 7438, 560 , 7982, 17711 , 24072 , 28670 , 32767 , 32758 , 29431 , 25331 , 17590 , 10043 , -213, -9664 , -17948, -23063, -28449, -32698, -32336, -31172, -24219, -19009, -11283, 620 , 8288, -883, 9815, 17341 , 25382 , 30733 , 30917 , 32163 , 31320 , 25070 , 16796 , 9487, -1120 , -10516, -18181, -23760, -28388, -31743, -32767, -29596, -25895, -16772, -8057 , -2065 , 8165, 1619, 7701, 18262 , 25347 , 29798 , 32767 , 30922 , 30934 , 25797 , 17737 , 9362, 99  , -9034 , -17814, -23602, -31155, -31691, -31131, -29093, -25675, -19013, -8667 , 237 , 7157, -525, 9215, 17638 , 24102 , 29431 , 32767 , 32762 , 31392 , 23654 , 18552 , 9214, -781, -10448, -16411, -25639, -29800, -30813, -31973, -29442, -26036, -17309, -10249, -1894 , 7302, -1340 , 8166, 18910 , 25028 , 30834 , 30988 , 32767 , 28819 , 24051 , 16555 , 9895, 524 , -9828 , -18371, -23365, -29574, -32767, -32338, -31494, -23602, -17534, -8829 , -1302 , 9485, -1558 , 9003, 16155 , 24170 , 29602 , 32767 , 32542 , 30993 , 24247 , 18971 , 9595, -1373 , -8907 , -17122, -26156, -30727, -32767, -31249, -29631, -26012, -18090, -10581, 725 , 10165 , 418 , 9671, 16209 , 25993 , 30791 , 30963 , 32767 , 30884 , 25638 , 16445 , 9267, 556 , -10503, -18031, -24549, -30294, -31801, -32502, -30460, -24877, -16985, -10689, 1074, 8614, 1212, 9945, 18797 , 23566 , 28463 , 32767 , 32767 , 30597 , 25491 , 16632 , 11050 , -232, -10534, -18807, -25845, -29114, -32767, -31002, -28550, -23572, -18320, -8216 , -1312 , 9283, -948, 9893, 18453 , 23463 , 30562 , 31326 , 32767 , 28888 , 23755 , 17845 , 8214, -738, -9395 , -18476, -24677, -29283, -30790, -32532, -29050, -23646, -18468, -8672 , -1543 , 9476, 572 , 9703, 18601 , 24702 , 31038 , 32080 , 31178 , 31319 , 24301 , 16765 , 7962, 1130, -9946 , -18251, -24892, -28197, -30755, -32693, -29529, -23926, -17733, -10535, -1757 , 8227, 226 , 10652 , 17229 , 24309 , 30953 , 32767 , 32767 , 31412 , 25230 , 17257 , 9344, -362, -8488 , -17556, -25603, -28135, -32767, -31065, -29131, -24684, -19214, -8647 , -1995 , 7361, -516, 8880, 16796 , 24185 , 30575 , 32165 , 30898 , 30525 , 23414 , 18104 , 8135, -438, -7717 , -18275, -25126, -29001, -32767, -31735, -30524, -25236, -18794, -10096, 846 , 9102, 549 , 10848 , 16886 , 26288 , 31188 , 32449 , 31568 , 30672 , 24870 , 18158 , 8660, 1240, -10534, -15953, -25481, -28316, -32767, -32330, -30983, -25582, -17094, -10767, -1473 , 8505, 334 , 8507, 16974 , 26065 , 28299 , 31604 , 32767 , 31201 , 24081 , 18122 , 8115, 230 , -9141 , -18709, -25586, -29933, -32767, -32657, -30533, -24450, -17324, -10770, -1681 , 10081 , -955, 8730, 18010 , 25734 , 29457 , 30939 , 31360 , 29796 , 23663 , 18303 , 8748, -159, -9657 , -18915, -23290, -29212, -32767, -32767, -30823, -24332, -19462, -11070, -1203 , 9838, 42  , 8904, 16096 , 23461 , 29474 , 32767 , 31268 , 30508 , 23604 , 16322 , 10568 , -144, -10290, -16377, -25077, -29645, -32715, -32293, -31164, -25941, -17372, -11107, 1118, 9789, 1348, 9714, 19030 , 24810 , 29465 , 31615 , 32767 , 29120 , 23758 , 18212 , 8488, 929 , -8940 , -18954, -23400, -31293, -31128, -32767, -29861, -24648, -16814, -9006 , 503 , 9626, 298 , 9987, 18779 , 25210 , 28986 , 32767 , 32458 , 29186 , 23308 , 19151 , 10637 , 390 , -10571, -17306, -24889, -30682, -31548, -32767, -30016, -23725, -17253, -10480, 1155, 8896, 291 , 7903, 17631 , 26178 , 28643 , 30883 , 32767 , 30300 , 26038 , 17700 , 9901, 1867, -9387 , -18240, -23979, -30822, -31095, -31213, -29868, -25793, -18794, -9649 , -957, 10093 , 226 , 10620 , 16094 , 23276 , 29606 , 30967 , 31321 , 28409 , 25707 , 16238 , 8182, -445, -9902 , -17645, -23454, -31224, -32438, -31616, -29624, -26028, -16836, -9991 , -359, 10321 , -371, 9962, 18343 , 26217 , 30366 , 32767 , 31653 , 28733 , 23691 , 17411 , 8635, -780, -9734 , -18988, -23471, -29960, -31797, -32767, -30373, -26166, -16575, -10782, 754 , 7949, 63  , 9366, 16826 , 25227 , 31266 , 31803 , 32767 , 29894 , 25141 , 17847 , 10633 , 431 , -10111, -17164, -23380, -29818, -31255, -32455, -30050, -24285, -19455, -10732, 272 , 10158 , 1273, 9665, 19173 , 23993 , 30723 , 32206 , 32767 , 31433 , 24440 , 17783 , 10898 , -611, -8247 , -17778, -23294, -28717, -32767, -32747, -31485, -23401, -17009, -10047, -567, 9095, 1108, 10511 , 18384 , 25678 , 29758 , 32767 , 32002 , 30119 , 24952 , 19459 , 10625 , -423, -7761 , -16288, -23207, -31240, -31445, -32767, -29146, -25186, -16533, -10787, -947, 7562, 1024, 8548, 18941 , 23923 , 28279 , 32441 , 32767 , 28796 , 25473 , 18011 , 8489, 521 , -10075, -18497, -23268, -28385, -32508, -32682, -28501, -23741, -19299, -9140 , -922, 9171, -680, 9673, 16495 , 26030 , 30288 , 30904 , 32767 , 30754 , 25442 , 18777 , 10197 , 320 , -10064, -18399, -25854, -30570, -32536, -32610, -31183, -24025, -18197, -10899, 343 , 9359, -1015 , 8162, 17217 , 23797 , 29471 , 31712 , 32767 , 28853 , 26437 , 16485 , 8839, -1040 , -10151, -16279, -25369, -29790, -31152, -32767, -31131, -24987, -19627, -8508 , 1101, 9289, 790 , 9201, 17976 , 24609 , 29594 , 31919 , 31904 , 29518 , 23742 , 17097 , 8621, -1144 , -9298 , -16049, -26141, -30100, -32767, -31946, -28946, -24703, -17056, -8411 , -756, 10288 , -71 , 9157, 18809 , 26209 , 29595 , 31671 , 31609 , 30569 , 26079 , 19282 , 8210, 779 , -7356 , -18804, -24866, -31078, -31014, -32406, -30417, -26560, -18882, -9668 , -2006 , 7897, 557 , 9134, 18793 , 24849 , 29342 , 32490 , 32767 , 30822 , 26308 , 16930 , 10014 , -574, -7704 , -17725, -23151, -31141, -32437, -31724, -28526, -25318, -18864, -8409 , -1560 , 7224, -344, 10630 , 16128 , 23416 , 29363 , 32446 , 32767 , 31438 , 26108 , 17299 , 8297, 1033, -8092 , -18467, -23445, -29941, -31926, -31743, -31452, -26493, -16932, -8913 , -1896 , 8177, -1032 , 7637, 18108 , 23196 , 30803 , 32767 , 32767 , 29406 , 26493 , 17582 , 8427, 1308, -10093, -18196, -25338, -29072, -31997, -31753, -30197, -23741, -16771, -8170 , -1198 , 9691, 1559, 10555 , 16490 , 26072 , 30441 , 31718 , 32767 , 29132 , 24124 , 16463 , 9925, 1432, -9846 , -16967, -24446, -29958, -31234, -32767, -31275, -23775, -19273, -8237 , -424, 7146, 1262, 9142, 19007 , 25876 , 31072 , 31621 , 31905 , 29557 , 26223 , 17213 , 10062 , 1473, -10482, -18704, -23070, -29839, -32767, -32767, -28534, -23763, -17534, -9390 , 406 , 8203, 1106, 8024, 17871 , 26113 , 29711 , 32123 , 32767 , 30300 , 23599 , 17278 , 9694, 1015, -10024, -17264, -26124, -30431, -31832, -32767, -30351, -24219, -16796, -11262, -94 , 9534, -639, 9367, 17194 , 24878 , 31136 , 31992 , 31236 , 28597 , 23657 , 17272 , 9699, 1454, -9745 , -19026, -24439, -31047, -32560, -32662, -30471, -25790, -18807, -10431, 712 , 9545, 1328, 9938, 16746 , 24003 , 29510 , 32634 , 31090 , 30564 , 23668 , 16336 , 9757, -319, -8216 , -17788, -24018, -31265, -32170, -32223, -28537, -25008, -16999, -8591 , 917 , 9434, 1635, 8623, 17099 , 25501 , 28923 , 32767 , 32767 , 29966 , 23307 , 17949 , 8747, 758 , -7388 , -15858, -22937, -28679, -31893, -32767, -29323, -25962, -18315, -8040 , -1210 , 7420, -11 , 8082, 16707 , 24946 , 28260 , 32767 , 31809 , 29201 , 25980 , 19069 , 9132, 605 , -7434 , -17422, -23301, -30900, -32767, -32767, -30866, -25416, -16793, -10914, -396, 9460, 1350, 10663 , 16729 , 23821 , 30954 , 32767 , 32124 , 31489 , 23976 , 17064 , 10834 , -839, -8476 , -17423, -23740, -28164, -31404, -32368, -30065, -24193, -17839, -10352, 889 , 9626, 1426, 9393, 17199 , 24534 , 29417 , 32258 , 32060 , 28717 , 25378 , 18182 , 10267 , 702 , -9619 , -18882, -26066, -29890, -32183, -32767, -28905, -26179, -19462, -8632 , -1422 , 7342, 1033, 8273, 18148 , 23397 , 28417 , 31642 , 32767 , 30083 , 25650 , 18755 , 8469, 1071, -7634 , -17625, -23402, -29511, -31678, -32767, -30538, -24131, -16940, -10002, 827 , 10189 , 1338, 9015, 16836 , 25281 , 29696 , 31239 , 30868 , 28320 , 24378 , 18793 , 10947 , -135, -10052, -15960, -24403, -31107, -32767, -32767, -29909, -23808, -17000, -10614, -841, 10246 , -113, 8509, 16844 , 24927 , 30127 , 32767 , 32380 , 29692 , 26095 , 17321 , 8746, -171, -9996 , -16944, -24491, -31039, -31006, -31409, -29981, -24708, -19217, -8823 , -386, 10212 , 1273, 9401, 17801 , 23262 , 30040 , 32767 , 32767 , 30525 , 24450 , 18791 , 10180 , 1571, -10370, -16148, -24286, -30103, -32062, -32767, -28956, -26517, -16629, -8364 , 254 , 8955, -1393 , 10009 , 18533 , 24422 , 28550 , 31589 , 32396 , 28657 , 24274 , 17776 , 10644 , 999 , -7429 , -18154, -24298, -28761, -31005, -32767, -31587, -26625, -17358, -9951 , -708, 10266 , 976 , 8559, 17472 , 24991 , 31050 , 31719 , 32269 , 30990 , 26322 , 17275 , 8194, 561 , -10522, -16437, -23650, -28104, -32767, -32265, -29196, -23719, -17519, -10981, -1394 , 7909, -1056 , 8988, 18374 , 24180 , 29764 , 31073 , 30982 , 29769 , 23586 , 16271 , 9142, 1361, -9422 , -17084, -23224, -29130, -32653, -31129, -30167, -25299, -18905, -10434, -1324 , 8315, -852, 9480, 19117 , 23933 , 28991 , 32767 , 31577 , 29342 , 26005 , 16921 , 10386 , -1392 , -8519 , -18860, -24153, -30107, -31591, -32767, -30662, -24324, -16778, -10984, 1078, 7720, 1412, 8971, 16992 , 24851 , 28327 , 32767 , 31479 , 29962 , 24932 , 18241 , 9708, 690 , -7461 , -16365, -25074, -29414, -32767, -32052, -31142, -24421, -18613, -10990, 447 , 8460, -1240 , 8488, 17623 , 24031 , 30104 , 32767 , 32460 , 28333 , 23408 , 16988 , 10054 , 593 , -8879 , -18060, -24147, -29090, -32705, -32439, -28661, -26073, -18946, -9573 , -1554 , 8401, -585, 7744, 19110 , 23680 , 29590 , 30853 , 31926 , 28410 , 23709 , 17154 , 10592 , 1425, -7720 , -17694, -23724, -28298, -31790, -32243, -31532, -25204, -16646, -9485 , -1673 , 9449, -1339 , 9310, 17943 , 24332 , 29203 , 32767 , 30929 , 29780 , 25742 , 16767 , 8440, 1390, -8951 , -16739, -23998, -28744, -32767, -32725, -30740, -26473, -16534, -10365, -2069 , 7638, 757 , 10329 , 16876 , 24855 , 29703 , 32767 , 32767 , 30734 , 23339 , 19261 , 9816, 247 , -9439 , -18729, -26153, -28651, -32114, -32767, -31248, -23940, -16782, -10442, -462, 9170, -841, 8974, 17148 , 25378 , 31019 , 32767 , 31023 , 31503 , 23283 , 16311 , 8191, 246 , -8130 , -17852, -25116, -29721, -30870, -31750, -29706, -24705, -17037, -11159, -1633 , 8713, 1388, 10229 , 18971 , 23294 , 28212 , 32767 , 31916 , 30371 , 24316 , 16774 , 8026, 1146, -9391 , -18849, -23944, -30122, -32767, -30997, -28933, -26268, -19615, -9826 , -1833 , 8447, 550 , 7963, 18733 , 26275 , 30340 , 32767 , 31925 , 30595 , 25233 , 18237 , 10238 , -1055 , -7586 , -16685, -26039, -30269, -32767, -32767, -30790, -24839, -17506, -11112, -827, 9339, 1044, 10006 , 18869 , 26092 , 28943 , 32767 , 32767 , 30275 , 24013 , 18180 , 10350 , -333, -8493 , -16397, -25522, -28839, -31456, -31394, -31514, -26387, -18821, -11048, 84  , 9982, 1585, 10097 , 16227 , 23476 , 29201 , 32411 , 32702 , 29153 , 26144 , 18343 , 9606, 1125, -8114 , -18727, -24408, -29503, -32670, -32767, -29081, -23471, -19598, -8871 , -825, 10386 , 500 , 10423 , 16985 , 25806 , 28385 , 31200 , 32510 , 31123 , 24452 , 16939 , 10763 , -57 , -8455 , -16778, -24208, -29114, -31876, -32489, -31584, -25712, -17246, -8611 , 543 , 8598, -703, 8612, 17934 , 23318 , 28370 , 32767 , 32082 , 29593 , 26074 , 18974 , 8297, 553 , -10468, -16063, -24524, -28041, -31203, -31592, -28750, -23915, -17405, -9885 , 840 , 7508, 938 , 10430 , 17914 , 25315 , 29943 , 31762 , 32624 , 29798 , 25678 , 16797 , 8329, -1156 , -10089, -17111, -23275, -28522, -31169, -32767, -29129, -24024, -18462, -9629 , 203 , 8576, -243, 8934, 16664 , 26007 , 28342 , 32540 , 32432 , 30987 , 23850 , 18602 , 9910, -414, -9284 , -18248, -25747, -29494, -32767, -31839, -29039, -23639, -19610, -9887 , -1294 , 8745, -503, 9016, 17160 , 23768 , 30253 , 32767 , 32767 , 30410 , 23713 , 19427 , 9506, 1039, -8732 , -16529, -24456, -29934, -32239, -32767, -28755, -23649, -19060, -11098, 579 , 8935, -1278 , 10717 , 18117 , 24322 , 30911 , 31708 , 31192 , 29055 , 23281 , 16908 , 10176 , 1736, -10451, -18214, -23141, -28243, -32767, -32767, -31298, -24896, -16932, -9020 , 444 , 7175, -32 , 8100, 18441 , 25431 , 29273 , 30830 , 32598 , 31306 , 24632 , 18937 , 10126 , 1187, -9053 , -17258, -24470, -30574, -32767, -31160, -31059, -25630, -16888, -8740 , -1369 , 10060 , -985, 10746 , 16199 , 25819 , 29858 , 30786 , 32767 , 28988 , 23271 , 19022 , 9134, 1387, -9330 , -16336, -23046, -28682, -31443, -31648, -30778, -25398, -19318, -9308 , 746 , 8323, 588 , 10075 , 17191 , 24879 , 29108 , 32767 , 30912 , 29962 , 23690 , 18288 , 8134, 514 , -8635 , -18274, -24782, -31255, -32767, -31407, -29135, -24613, -17182, -9479 , 64  , 7964, -570, 10530 , 17552 , 23754 , 30024 , 31672 , 31153 , 30550 , 23425 , 19244 , 10584 , -852, -9781 , -17758, -24294, -30927, -32767, -32489, -29599, -23718, -18391, -10641, 1006, 8646, -1168 , 9089, 17817 , 24633 , 28417 , 31219 , 32767 , 30853 , 24675 , 18970 , 9045, 743 , -7871 , -18666, -25893, -30735, -31869, -31964, -29915, -23412, -16466, -11091, -197, 9852, 1192, 10787 , 18541 , 23124 , 29501 , 31483 , 31474 , 29755 , 24017 , 19015 , 10690 , 1151, -8431 , -16103, -23986, -30205, -32366, -32767, -30056, -24559, -17020, -10019, 1092, 10286 , -1267 , 8942, 17884 , 23546 , 30036 , 32767 , 31900 , 30487 , 23595 , 19268 , 10078 , 324 , -9220 , -19110, -24281, -29546, -32767, -32767, -29392, -25817, -18616, -9034 , -2010 , 10012 , 1595, 8268, 16825 , 23832 , 28142 , 31211 , 32767 , 30951 , 23915 , 18263 , 8169, 1097, -7530 , -18240, -24416, -28479, -32767, -31692, -28911, -24021, -18167, -8648 , -1384 , 7278, 198 , 9143, 16712 , 24984 , 30596 , 32767 , 30947 , 30284 , 24423 , 16338 , 10039 , 1452, -9656 , -17254, -23981, -31181, -32069, -31219, -30224, -23760, -19021, -9444 , -462, 9651, 1558, 10150 , 18899 , 24676 , 31060 , 32767 , 31412 , 28661 , 24670 , 17722 , 11044 , -405, -8849 , -18897, -23721, -30174, -31301, -32423, -29258, -26172, -17418, -9673 , -358, 7798, -1211 , 7611, 17037 , 24606 , 31257 , 32767 , 31606 , 30441 , 25151 , 17113 , 9232, -704, -8960 , -17907, -25223, -29636, -32767, -32767, -28538, -25061, -16666, -8796 , -238, 9511, 1415, 9149, 17462 , 25389 , 30580 , 31848 , 32767 , 28720 , 24633 , 18288 , 9827, 855 , -7547 , -16625, -24666, -29847, -32767, -32755, -29971, -23680, -16609, -11173, -637, 9125, -1250 , 7586, 17230 , 24740 , 29051 , 31761 , 32564 , 30839 , 26375 , 16552 , 10868 , -1225 , -7365 , -18568, -25397, -29186, -32326, -32416, -30982, -24883, -19310, -10476, 25  , 8723, -759, 8752, 16560 , 26087 , 30591 , 31875 , 32767 , 29507 , 23983 , 16689 , 8441, -515, -8312 , -17674, -24193, -30652, -31075, -32767, -30683, -25416, -17586, -10509, 377 , 7265, 135 , 10269 , 18840 , 25195 , 30686 , 32037 , 31301 , 30586 , 25286 , 17724 , 9818, -679, -7552 , -17075, -25736, -28710, -32049, -32012, -29717, -25006, -18925, -9741 , -462, 9253, 984 , 7725, 18035 , 25136 , 31101 , 32767 , 31321 , 29655 , 23829 , 18909 , 8445, 327 , -7536 , -18764, -24526, -30877, -31340, -32767, -29877, -23717, -18719, -10484, -588, 7695, 162 , 10232 , 19164 , 24181 , 29170 , 32146 , 31376 , 30088 , 25134 , 17651 , 10508 , 599 , -10131, -19078, -24082, -29000, -31822, -32270, -30728, -25092, -18230, -8474 , -1285 , 9861, -227, 8777, 17352 , 24487 , 28291 , 32667 , 32380 , 29529 , 24125 , 17465 , 9709, 610 , -7451 , -17335, -25906, -28502, -30865, -32147, -31086, -26434, -17198, -8493 , -828, 9158, 795 , 9371, 18121 , 26236 , 30466 , 32767 , 32767 , 30295 , 25086 , 18779 , 9331, 1202, -7621 , -17197, -24131, -28473, -32767, -32487, -30637, -24188, -17807, -10939, -784, 9207, -1062 , 8705, 19105 , 23670 , 29623 , 32006 , 31118 , 30247 , 24098 , 19334 , 10085 , -1085 , -7912 , -16358, -23639, -29998, -31903, -32767, -29083, -24221, -17799, -9174 , -1916 , 8484, -1563 , 7932, 17881 , 23951 , 30031 , 32767 , 32767 , 30766 , 24842 , 17854 , 10610 , 1184, -8192 , -17448, -23345, -28452, -32767, -32767, -29499, -26009, -17175, -9467 , -758, 8908, 305 , 8061, 16658 , 23823 , 29720 , 32767 , 32767 , 29155 , 24537 , 17708 , 8816, 1130, -10112, -16977, -23256, -29876, -32767, -32401, -29125, -24127, -19357, -11247, 1161, 7250, -575, 10232 , 17572 , 24147 , 30072 , 32767 , 31847 , 31337 , 25791 , 17568 , 10952 , 1622, -9792 , -18120, -26183, -29444, -31412, -31273, -30287, -23887, -17153, -11216, -1443 , 8639, 1018, 9792, 17802 , 25295 , 29176 , 32767 , 32767 , 28841 , 25817 , 17424 , 8475, 1125, -10591, -17370, -23272, -29264, -31214, -32767, -31202, -24771, -16815, -10601, 188 , 10063 , -1315 , 10523 , 19188 , 23841 , 31297 , 30916 , 32767 , 28833 , 23916 , 18060 , 7815, 1603, -10449, -18902, -25648, -30704, -32767, -32767, -29213, -24121, -16738, -9217 , -511, 8869, -198, 9352, 18252 , 25535 , 28980 , 32387 , 31123 , 30355 , 25616 , 19261 , 8740, 789 , -7989 , -16578, -23991, -30329, -32005, -31343, -29831, -24637, -19147, -8688 , 983 , 7908, -1536 , 8543, 19197 , 25669 , 29319 , 32767 , 32271 , 30756 , 25772 , 16537 , 9015, -140, -10472, -17760, -23547, -30790, -32222, -31652, -31592, -23995, -19393, -10229, -1153 , 10382 , -348, 7616, 18818 , 25463 , 29749 , 32767 , 32550 , 30345 , 25248 , 18215 , 8065, 1506, -10198, -17101, -24023, -28179, -32767, -32011, -30077, -24742, -19284, -10867, -1790 , 8013, 657 , 9292, 16567 , 24343 , 28544 , 32767 , 32767 , 31206 , 23331 , 18023 , 7883, 1606, -8234 , -16422, -24332, -28122, -32767, -31554, -29427, -24193, -18190, -10522, -1899 , 7467, -713, 8088, 16638 , 23206 , 30291 , 31055 , 31199 , 30465 , 23241 , 16576 , 9680, 1626, -9899 , -18251, -24893, -28788, -31087, -31833, -30233, -23929, -17500, -10694, -1688 , 8858, 1036, 8492, 17183 , 23335 , 29824 , 32767 , 32452 , 29028 , 23321 , 18248 , 8297, 466 , -9850 , -16896, -23656, -29976, -31321, -32767, -30826, -26355, -19272, -9420 , -1922 , 9796, -1195 , 7811, 17972 , 24981 , 28648 , 32446 , 32767 , 28714 , 24476 , 19491 , 7888, 439 , -8029 , -16143, -23298, -29818, -32767, -32292, -29644, -26170, -18382, -10217, 897 , 8854, 883 , 10600 , 18163 , 24977 , 30761 , 31732 , 32767 , 29421 , 23285 , 19401 , 8131, -893, -9606 , -17640, -24828, -28466, -31956, -30989, -30411, -23514, -18727, -8135 , 537 , 10389 , -396, 8541, 19134 , 23682 , 31303 , 31266 , 32606 , 30169 , 24892 , 16885 , 7961, -909, -7416 , -18688, -24974, -28574, -32767, -30914, -30040, -23660, -17700, -11056, -236, 8358, -965, 10734 , 17267 , 23812 , 28462 , 32767 , 32767 , 29579 , 25721 , 17788 , 8446, -1159 , -7486 , -16396, -23385, -29419, -32767, -32767, -30651, -24296, -18554, -9949 , -892, 8000, -1624 , 7640, 19195 , 25125 , 29505 , 31428};	    int tamanho = sizeof(vetor) / sizeof(vetor[0]);

	    int16_t readIO;
	    int i;
	    for (i = 0; i < tamanho; i++) {
	    	IOWR_16DIRECT(0, 0, vetor[i]);
	     	readIO = IORD_16DIRECT(0, 0);
	     	printf("%d\n", readIO);
	    }

	  msleep(300000);
  }
}

/* Main creates a single task, SSSInitialTask, and starts task scheduler.
 */

int main (int argc, char* argv[], char* envp[])
{
  
  INT8U error_code;

  DM9000A_INSTANCE( DM9000A_0, dm9000a_0 );
  DM9000A_INIT( DM9000A_0, dm9000a_0 );

  /* Clear the RTOS timer */
  OSTimeSet(0);

  /* SSSInitialTask will initialize the NicheStack
   * TCP/IP Stack and then initialize the rest of the Simple Socket Server example
   * RTOS structures and tasks.
   */
  error_code = OSTaskCreateExt(SSSInitialTask,
                             NULL,
                             (void *)&SSSInitialTaskStk[TASK_STACKSIZE],
                             SSS_INITIAL_TASK_PRIORITY,
                             SSS_INITIAL_TASK_PRIORITY,
                             SSSInitialTaskStk,
                             TASK_STACKSIZE,
                             NULL,
                             0);
  alt_uCOSIIErrorHandler(error_code, 0);

  /*
   * As with all MicroC/OS-II designs, once the initial thread(s) and
   * associated RTOS resources are declared, we start the RTOS. That's it!
   */
  OSStart();
  
  while(1); /* Correct Program Flow never gets here. */

  return -1;
}

int str_length( char str[])
{
   int i = 0;
   while (str[i] != '\0')
       i++;
   return i;
}

int binaryTodecimal (char num[])
{
    int i, deci_num, mul = 0;
    for ( deci_num = 0, i = str_length(num) - 1; i >= 0; --i, ++mul)
    {
            deci_num = deci_num + (num[i] - 48) * (1 << mul);
    }

    return deci_num;
 }

char *decimal_to_binary(int n)
{
  int c, d, t;
  char *p;

  t = 0;
  p = (char*)malloc(32+1);

  if (p == NULL)
    exit(EXIT_FAILURE);

  for (c = 31 ; c >= 0 ; c--)
  {
    d = n >> c;

    if (d & 1)
      *(p+t) = 1 + '0';
    else
      *(p+t) = 0 + '0';

    t++;
  }
  *(p+t) = '\0';

  return  p;
}


void disp_7seg(int _duty_cycle, int _prescaler, int _timer, int _enable){

	int disp1, disp2, disp3, disp4, disp5, disp6, disp7, disp8;

    disp1 = 0;
    disp2 = _duty_cycle;

    disp3 = 0;
    disp4 = _prescaler;

    disp5 = 0;
    disp6 = _timer;

    disp7 = 0;
    disp8 = _enable;

	IOWR_ALTERA_AVALON_PIO_DATA(SEG7_DISPLAY_BASE, ((disp1 << 28) + (disp2 << 24) + (disp3 << 20) + (disp4 << 16) + (disp5 << 12) + (disp6 << 8) + (disp7 << 4) + (disp8 << 0)));

}

/******************************************************************************
*                                                                             *
* License Agreement                                                           *
*                                                                             *
* Copyright (c) 2006 Altera Corporation, San Jose, California, USA.           *
* All rights reserved.                                                        *
*                                                                             *
* Permission is hereby granted, free of charge, to any person obtaining a     *
* copy of this software and associated documentation files (the "Software"),  *
* to deal in the Software without restriction, including without limitation   *
* the rights to use, copy, modify, merge, publish, distribute, sublicense,    *
* and/or sell copies of the Software, and to permit persons to whom the       *
* Software is furnished to do so, subject to the following conditions:        *
*                                                                             *
* The above copyright notice and this permission notice shall be included in  *
* all copies or substantial portions of the Software.                         *
*                                                                             *
* THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR  *
* IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,    *
* FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE *
* AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER      *
* LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING     *
* FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER         *
* DEALINGS IN THE SOFTWARE.                                                   *
*                                                                             *
* This agreement shall be governed in all respects by the laws of the State   *
* of California and by the laws of the United States of America.              *
* Altera does not recommend, suggest or require that this reference design    *
* file be used in conjunction or combination with any other product.          *
******************************************************************************/
